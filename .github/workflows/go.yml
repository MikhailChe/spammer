name: Go Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    - name: Build
      run: go build -o spammer.exe -v ./...
    - name: Test
      run: go test -v ./...
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: spammer-app
        path: spammer.exe

  release:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Get latest tag
      id: get_version
      run: echo "tag=v1.0.$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
    - name: Create GitHub Release
      id: create_release  # Capturing the release output
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.tag }}
        release_name: Release ${{ env.tag }}
        draft: false
        prerelease: false
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: spammer-app
        path: .  # Downloads into the current directory
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./spammer.exe  # Ensure correct path
        asset_name: spammer.exe
        asset_content_type: application/octet-stream
